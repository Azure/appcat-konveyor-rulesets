- customVariables: []
  description: Embedded Resource Adapter
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-01400
  tag:
  - Resource Adapter
  - Embedded Resource Adapter
  when:
    builtin.file:
      pattern: .*\.rar
- category: potential
  customVariables: []
  description: ActiveMQ found
  effort: 3
  labels:
  - konveyor.io/include=always
  - connect
  links:
  - title: Spring Boot application using an Active MQ Broker
    url: https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#jms-message-brokers
  - title: Azure Service Bus documentation
    url: https://learn.microsoft.com/azure/service-bus-messaging
  - title: Migrate existing Java Message Service applications from Apache ActiveMQ
      to Azure Service Bus
    url: https://learn.microsoft.com/azure/service-bus-messaging/migrate-jms-activemq-to-servicebus
  - title: Azure Monitor documentation
    url: https://learn.microsoft.com/azure/azure-monitor
  - title: Passwordless connections for Azure services
    url: https://learn.microsoft.com/azure/developer/intro/passwordless-overview
  - title: Microsoft Defender for Cloud
    url: https://learn.microsoft.com/azure/defender-for-cloud
  - title: How to use the Spring Boot Starter for Azure Service Bus JMS
    url: https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-boot-starter-java-app-with-azure-service-bus
  - title: Azure Spring Boot Starter for Azure Service Bus JMS
    url: https://search.maven.org/artifact/com.azure.spring/azure-spring-boot-starter-servicebus-jms
  message: |-
    To migrate a Java application that uses ActiveMQ to Azure, you can follow these recommendations:

     * Provision **Azure Service Bus**: Replace ActiveMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.

     * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.

     * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.

     * Handle **message persistence**: ActiveMQ often relies on disk storage for message persistence. Azure Service Bus offers built-in message persistence, ensuring reliable message delivery. Ensure your application's messaging code handles message persistence appropriately.

     * Enable **monitoring and diagnostics**: Utilize Azure Monitor and Microsoft Defender for Cloud to monitor and detect any potential security threats or anomalies in your Azure Service Bus environment. Enable diagnostics logging and set up alerts for suspicious activities.

     * Apply **security** measures: Implement Azure Active Directory (Azure AD) authentication and authorization for accessing Azure Service Bus resources. Enable TLS encryption for communication between your Java application and Azure Service Bus. Enable passwordless connections for Azure services to improve security and reduce the risk of credential theft.
  ruleID: connect-01500
  tag:
  - ActiveMQ
  when:
    or:
    - java.dependency:
        lowerbound: 0.0.0
        name: org.springframework.boot.spring-boot-starter-activemq
    - java.dependency:
        lowerbound: 0.0.0
        nameregex: org\.apache\.activemq\..*
    - builtin.file:
        pattern: .*activemq.*
- customVariables: []
  description: Embedded library - OpenWS
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-01600
  tag:
  - OpenWS
  - Embedded library - OpenWS
  when:
    builtin.file:
      pattern: .*openws.*
- customVariables: []
  description: Embedded library - WSDL
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-01700
  tag:
  - WSDL
  - Embedded library - WSDL
  when:
    builtin.file:
      pattern: .*wsdl.*
- customVariables: []
  description: Embedded library - RabbitMQ Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-01800
  tag:
  - RabbitMQ Client
  - Embedded library - RabbitMQ Client
  when:
    or:
    - builtin.file:
        pattern: .*amqp-client.*
    - builtin.file:
        pattern: .*rabbitmq.*
    - builtin.file:
        pattern: .*spring-rabbit.*
    - builtin.file:
        pattern: .*lyra.*
    - builtin.file:
        pattern: .*conduit.*
- customVariables: []
  description: Embedded library - Spring Messaging Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-01900
  tag:
  - Spring Messaging Client
  - Embedded library - Spring Messaging Client
  when:
    or:
    - builtin.file:
        pattern: .*spring-messaging.*
    - builtin.file:
        pattern: .*spring-jms.*
- customVariables: []
  description: Embedded library - Camel Messaging Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-02000
  tag:
  - Camel Messaging Client
  - Embedded library - Camel Messaging Client
  when:
    builtin.file:
      pattern: .*camel-jms.*
- customVariables: []
  description: Embedded library - Amazon SQS Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-02100
  tag:
  - Amazon SQS Client
  - Embedded library - Amazon SQS Client
  when:
    builtin.file:
      pattern: .*aws-java-sdk-sqs.*
- customVariables: []
  description: Embedded library - HornetQ Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-02200
  tag:
  - HornetQ Client
  - Embedded library - HornetQ Client
  when:
    builtin.file:
      pattern: .*hornetq.*
- customVariables: []
  description: Embedded library - AMQP Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-02300
  tag:
  - ' Client'
  - Embedded library - AMQP Client
  when:
    builtin.file:
      pattern: .*amqp.*
- customVariables: []
  description: Embedded library - RocketMQ Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-02400
  tag:
  - ' Client'
  - Embedded library - RocketMQ Client
  when:
    builtin.file:
      pattern: .*rocketmq-client.*
- customVariables: []
  description: Embedded library - 0MQ Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-02500
  tag:
  - 0MQ Client
  - Embedded library - 0MQ Client
  when:
    or:
    - builtin.file:
        pattern: .*jzmq.*
    - builtin.file:
        pattern: .*jeromq.*
- customVariables: []
  description: Embedded library - JBossMQ Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-02600
  tag:
  - JBossMQ Client
  - Embedded library - JBossMQ Client
  when:
    builtin.file:
      pattern: .*jbossmq-client.*
- customVariables: []
  description: Embedded library - Zbus Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-02700
  tag:
  - Zbus Client
  - Embedded library - Zbus Client
  when:
    builtin.file:
      pattern: .*zbus-client.*
- customVariables: []
  description: Embedded library - Qpid Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-02800
  tag:
  - Qpid Client
  - Embedded library - Qpid Client
  when:
    builtin.file:
      pattern: .*qpid.*
- customVariables: []
  description: Embedded library - Kafka Client
  labels:
  - konveyor.io/include=always
  links: []
  ruleID: connect-02900
  tag:
  - Kafka Client
  - Embedded library - Kafka Client
  when:
    or:
    - builtin.file:
        pattern: .*kafka-clients.*
    - builtin.file:
        pattern: .*spring-kafka.*
