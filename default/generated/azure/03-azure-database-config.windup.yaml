# Copyright (c) Microsoft Corporation.   

# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#     http://www.apache.org/licenses/LICENSE-2.0  

# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 

# See the License for the specific language governing permissions and 
# limitations under the License. 
- category: potential
  customVariables: []
  description: JDBC connection found in configuration file
  effort: 0
  labels:
  - konveyor.io/target=azure-spring-apps
  - konveyor.io/target=azure-appservice
  - konveyor.io/target=azure-aks
  - konveyor.io/target=azure-container-apps
  - konveyor.io/source
  - database
  - jdbc
  links:
  - title: JDBC connection string found in configuration file
    url: https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#databases
  - title: Use Spring Data JDBC with Azure Database for MySQL
    url: https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-jdbc-with-azure-mysql
  - title: Use Spring Data JDBC with Azure Database for PostgreSQL
    url: https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-jdbc-with-azure-postgresql
  - title: Use Spring Data JDBC with Azure SQL Database
    url: https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-jdbc-with-azure-sql-server
  - title: Bind an Azure Database for PostgreSQL with service connector
    url: https://learn.microsoft.com/azure/service-connector/tutorial-java-spring-mysql
  - title: Passwordless connections for Azure services
    url: https://learn.microsoft.com/azure/developer/intro/passwordless-overview
  message: "The application uses a JDBC connection string, username or password in
    the configuration file. To migrate a Java application that uses a JDBC connection
    string to Azure, you can follow these recommendations:\n \n * **Use a database
    that is fully managed on Azure**: Use databases such as Azure SQL, Azure Database
    for MySQL, or Azure Database for PostgreSQL.\n\n * **Connect to databases using
    Service Connector**: Create service connection using **Service Connector** to
    connect your application to Azure SQL, Azure Database for MySQL, or Azure Database
    for PostgreSQL. Service Connector provides a secure and easy way to connect your
    application to Azure services without having to manage secrets or credentials
    in your application code.\n\n * **Passwordless connections for Azure services**:
    Consider using passwordless connections for Azure services. You can provide an
    additional layer of security and convenience for accessing resources in Azure
    by eliminating the need for passwords. This way you can reduce the risk of password-related
    vulnerabilities, such as weak passwords or password theft."
  ruleID: azure-database-config-jdbc-01000
  when:
    or:
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: 'jdbc:'
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: datasource.url
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: datasource.u-r-l
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: datasource.jdbc-url
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: datasource.username
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: datasource.user
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: datasource.password
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: jdbc.url
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: jdbc.username
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: jdbc.password
- category: potential
  customVariables: []
  description: MongoDB connection found in configuration file
  effort: 0
  labels:
  - konveyor.io/target=azure-spring-apps
  - konveyor.io/target=azure-appservice
  - konveyor.io/target=azure-aks
  - konveyor.io/target=azure-container-apps
  - konveyor.io/source
  - database
  - mongodb
  links:
  - title: MongoDB connection string found in configuration file
    url: https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#databases
  - title: Integrate Azure Cosmos DB for MongoDB with Service Connector
    url: https://learn.microsoft.com/azure/service-connector/how-to-integrate-cosmos-db
  - title: Passwordless connections for Azure services
    url: https://learn.microsoft.com/azure/developer/intro/passwordless-overview
  - title: How to use Spring Data MongoDB API with Azure Cosmos DB
    url: https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-mongodb-with-cosmos-db
  - title: Spring Cloud Azure Starter Data Cosmos DB
    url: https://search.maven.org/artifact/com.azure.spring/spring-cloud-azure-starter-data-cosmos
  message: "The application uses a MongoDB connection string. To migrate a Java application
    that uses a MongoDB connection string to Azure, you can follow these recommendations:\n\n
    * Use a managed **Azure Cosmos DB for MongoDB**: Create a managed Cosmos DB for
    MongoDB database in Azure and choose the appropriate pricing tier based on your
    application's requirements for performance, storage, and availability.\n \n *
    **Connect to Azure Cosmos DB for MongoDB using Service Connector**: Create service
    connection using **Service Connector** to connect your application to Azure Cosmos
    DB for MongoDB. Service Connector provides a secure and easy way to connect your
    application to Azure services without having to manage secrets or credentials
    in your application code.\n\n * **Passwordless connections for Azure services**:
    Consider using passwordless connections for Azure services. You can provide an
    additional layer of security and convenience for accessing resources in Azure
    by eliminating the need for passwords. This way you can reduce the risk of password-related
    vulnerabilities, such as weak passwords or password theft."
  ruleID: azure-database-config-mongodb-02000
  when:
    or:
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: 'mongodb:'
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: mongodb.uri
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: mongodb.username
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: mongodb.password
- category: potential
  customVariables: []
  description: R2DBC connection found in configuration file
  effort: 0
  labels:
  - konveyor.io/target=azure-spring-apps
  - konveyor.io/target=azure-appservice
  - konveyor.io/target=azure-aks
  - konveyor.io/target=azure-container-apps
  - konveyor.io/source
  - database
  - r2dbc
  links:
  - title: R2DBC connection string found in configuration file
    url: https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#databases
  - title: Service Connector
    url: https://learn.microsoft.com/azure/service-connector/overview
  - title: Passwordless connections for Azure services
    url: https://learn.microsoft.com/azure/developer/intro/passwordless-overview
  - title: Use Spring Data R2DBC with Azure Database for MySQL
    url: https://learn.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-r2dbc-with-azure-mysql
  - title: Use Spring Data R2DBC with Azure Database for PostgreSQL
    url: https://learn.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-r2dbc-with-azure-postgresql
  - title: Use Spring Data R2DBC with Azure SQL Database
    url: https://learn.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-r2dbc-with-azure-sql-server
  message: "The application uses a R2DBC connection string, username or password in
    the configuration file. To migrate a Java application that uses a R2DBC connection
    string to Azure, you can follow these recommendations:\n \n * **Use a database
    that is fully managed on Azure**: Use databases such as Azure SQL, Azure Database
    for MySQL, or Azure Database for PostgreSQL.\n\n * **Connect to databases using
    Service Connector**: Create service connection using **Service Connector** to
    connect your application to Azure SQL, Azure Database for MySQL, or Azure Database
    for PostgreSQL. Service Connector provides a secure and easy way to connect your
    application to Azure services without having to manage secrets or credentials
    in your application code.\n\n * **Passwordless connections for Azure services**:
    Consider using passwordless connections for Azure services. You can provide an
    additional layer of security and convenience for accessing resources in Azure
    by eliminating the need for passwords. This way you can reduce the risk of password-related
    vulnerabilities, such as weak passwords or password theft."
  ruleID: azure-database-config-r2dbc-03000
  when:
    or:
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: 'r2dbc:'
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: r2dbc.username
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: r2dbc.password
    - builtin.filecontent:
        filePattern: (/|\\)([^/\\]+)\.(xml|properties|yaml|yml)$
        pattern: r2dbc.url
