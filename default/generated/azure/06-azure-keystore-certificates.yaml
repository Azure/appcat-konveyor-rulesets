# Copyright (c) Microsoft Corporation.   

# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#     http://www.apache.org/licenses/LICENSE-2.0  

# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 

# See the License for the specific language governing permissions and 
# limitations under the License. 
- category: potential
  customVariables: []
  description: Java KeyStore file found
  effort: 3
  labels:
  - target=azure-appservice
  - target=azure-aks
  - target=azure-container-apps
  - source
  - domain=cloud-readiness
  - category=local-credential
  - JKS
  - os=windows
  - os=linux
  links:
  - title: Azure Key Vault documentation
    url: https://learn.microsoft.com/azure/key-vault
  message: "The application has a Java KeyStore file. You can migrate it to Azure
    Key Vault.\n\n * **Migrate the Java KeyStore to Azure Key Vault**: With Azure
    Key Vault you can centralize and securely manage your cryptographic keys and certificates
    in a highly available and scalable service. Azure Key Vault provides robust access
    control and auditing capabilities, ensuring that your keys and certificates are
    protected and accessible only to authorized entities.\n \n * **Update your Java
    application**: Modify your Java application's code to retrieve the keys and certificates
    from Azure Key Vault. Update the code that references the Java KeyStore to use
    Azure Key Vault APIs for accessing the cryptographic materials.\n \n * **Secure
    access to Azure Key Vault**: Configure appropriate access policies and permissions
    for your Azure Key Vault to ensure that only authorized users and applications
    can access the keys and certificates stored in it."
  ruleID: azure-keystore-certificates-01000
  when:
    builtin.file:
      pattern: ^([a-zA-Z0-9._-]+)\.jks$
- category: potential
  customVariables: []
  description: The application loads certificates into a KeyStore
  effort: 3
  labels:
  - target=azure-appservice
  - target=azure-aks
  - target=azure-container-apps
  - source
  - domain=cloud-readiness
  - category=local-credential
  - JKS
  - os=windows
  - os=linux
  links:
  - title: Azure Key Vault documentation
    url: https://learn.microsoft.com/azure/key-vault
  - title: Azure Key Vault JCA client library for Java
    url: https://github.com/Azure/azure-sdk-for-java/blob/main/sdk/keyvault/azure-security-keyvault-jca/README.md
  - title: Azure Key Vault Certificate client library for Java
    url: https://learn.microsoft.com/java/api/overview/azure/security-keyvault-certificates-readme
  message: |-
    The application loads a KeyStore from a file or an input stream. To migrate this code to Azure, you would need to modify it so it retrieves the cryptographic material from Azure Key Vault instead.

     * **Create an Azure Key Vault**: Azure Key Vault is a secure storage service that allows you to store and manage cryptographic keys, secrets, and certificates.

     * **Import keys and certificates into Azure Key Vault**: Use the Azure Key Vault Java SDK or Azure CLI to import the keys and certificates into Azure Key Vault. Create corresponding key and certificate objects in Azure Key Vault and import the key material and certificates obtained from the existing KeyStore.

     * **Update your Java code**: Modify your Java code that to retrieve the cryptographic material from Azure Key Vault. Instead of loading from a file or input stream, use the Azure Key Vault Java SDK to access the keys and certificates stored in Azure Key Vault. Update the code to authenticate and retrieve the cryptographic material using Azure.
  ruleID: azure-keystore-certificates-02000
  when:
    or:
    - java.referenced:
        location: METHOD_CALL
        pattern: java.security.KeyStore.getInstance*
    - java.referenced:
        location: METHOD_CALL
        pattern: java.security.KeyStore.load*
