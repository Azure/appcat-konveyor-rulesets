# Copyright (c) Microsoft Corporation.   

# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#     http://www.apache.org/licenses/LICENSE-2.0  

# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 

# See the License for the specific language governing permissions and 
# limitations under the License. 
- category: potential
  customVariables: []
  description: Spring Cloud version too low
  effort: 5
  labels:
  - konveyor.io/source=springboot
  - konveyor.io/target=azure-spring-apps
  - konveyor.io/target=azure-aks
  - konveyor.io/target=azure-appservice
  - konveyor.io/target=azure-container-apps
  - domain=java-modernization
  - category=framework-upgrade
  - version
  links:
  - title: Azure Spring Apps Spring Boot Version Support
    url: https://learn.microsoft.com/azure/spring-apps/concept-app-customer-responsibilities#spring-boot-and-spring-cloud-versions
  - title: Spring Cloud
    url: https://spring.io/projects/spring-cloud/
  - title: Spring Cloud Supported Versions
    url: https://github.com/spring-cloud/spring-cloud-release/wiki/Supported-Versions
  - title: Use Rewrite to migrate to Spring Cloud 2022
    url: https://docs.openrewrite.org/recipes/java/spring/cloud2022/upgradespringcloud_2022
  message: |-
    The application is using a Spring Cloud version that is too low. To get the best experience, consider upgrading to a supported version of Spring Cloud.

     Here are some steps you can take:

     * Choose a **supported Spring Cloud version**: Check out the Spring Cloud Supported Versions page to determine the most suitable supported version.

     * **Update Spring Cloud version**: Update the Spring Cloud version of your application. There are automated tools like Rewrite to help you with the migration.

     * **Address code compatibility**: Review your application's codebase for any potential compatibility issues with the target Spring Cloud version. Update deprecated APIs or features, address any language or library changes, and ensure that your code follows best practices and standards.

     * **Test thoroughly**: Execute a comprehensive testing process to verify the compatibility and functionality of your application with the new Spring Cloud version. Perform unit tests, integration tests, and system tests to validate that all components and dependencies work as expected.
  ruleID: spring-boot-to-azure-spring-cloud-version-01000
  when:
    java.dependency:
      lowerbound: Angel
      name: org.springframework.cloud.spring-cloud-dependencies
      upperbound: Edgware.9
- category: potential
  customVariables: []
  description: spring cloud version out of support
  effort: 2
  labels:
  - konveyor.io/source=springboot
  - konveyor.io/target=azure-spring-apps
  - konveyor.io/target=azure-aks
  - konveyor.io/target=azure-appservice
  - konveyor.io/target=azure-container-apps
  - domain=java-modernization
  - category=framework-upgrade
  - version
  links:
  - title: Azure Spring Apps Spring Boot Version Support
    url: https://learn.microsoft.com/azure/spring-apps/concept-app-customer-responsibilities#spring-boot-and-spring-cloud-versions
  - title: Spring Cloud
    url: https://spring.io/projects/spring-cloud/
  - title: Spring Cloud Supported Versions
    url: https://github.com/spring-cloud/spring-cloud-release/wiki/Supported-Versions
  - title: Use Rewrite to migrate to Spring Cloud 2022
    url: https://docs.openrewrite.org/recipes/java/spring/cloud2022/upgradespringcloud_2022
  message: |-
    The application is using a Spring Cloud version that is no longer supported. To get the best experience, consider upgrading to a supported version of Spring Cloud.

     Here are some steps you can take to update your application to a supported version of Spring Cloud:

     * Choose a **supported Spring Cloud version**: Check out the Spring Cloud Supported Versions page to determine the most suitable supported version.

     * **Update Spring Cloud version**: Update the Spring Cloud version of your application. There are automated tools like Rewrite to help you with the migration.

     * **Address code compatibility**: Review your application's codebase for any potential compatibility issues with the target Spring Cloud version. Update deprecated APIs or features, address any language or library changes, and ensure that your code follows best practices and standards.

     * **Test thoroughly**: Execute a comprehensive testing process to verify the compatibility and functionality of your application with the new Spring Cloud version. Perform unit tests, integration tests, and system tests to validate that all components and dependencies work as expected.
  ruleID: spring-boot-to-azure-spring-cloud-version-02000
  when:
    java.dependency:
      lowerbound: Finchley
      name: org.springframework.cloud.spring-cloud-dependencies
      upperbound: "2020.99"