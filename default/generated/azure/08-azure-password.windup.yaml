- category: potential
  customVariables: []
  description: Password found in configuration file
  effort: 3
  labels:
  - konveyor.io/source=springboot
  - konveyor.io/source=eap7
  - konveyor.io/source=eap
  - konveyor.io/target=azure-spring-apps
  - konveyor.io/target=azure-appservice
  - konveyor.io/target=azure-aks
  - konveyor.io/target=azure-container-apps
  - password
  - security
  links:
  - title: Azure Key Vault documentation
    url: https://learn.microsoft.com/azure/key-vault
  - title: Passwordless connections for Azure services
    url: https://learn.microsoft.com/azure/developer/intro/passwordless-overview
  - title: Password found in configuration file
    url: https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#inventory-configuration-sources-and-secrets
  - title: Read a secret from Azure Key Vault in a Spring Boot application
    url: https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-boot-starter-java-app-with-azure-key-vault
  - title: Azure Spring Boot Starter for Azure Key Vault Secrets
    url: https://search.maven.org/artifact/com.azure.spring/azure-spring-boot-starter-keyvault-secrets
  message: |-
    Using clear passwords in property files is a security risk, as they can be easily compromised if the files are accessed by unauthorized individuals. To enhance the security of your application, it is recommended to employ secure credential management practices.

     * **Azure Key Vault**: Utilize Azure Key Vault to securely store and manage your application's passwords and other sensitive credentials. Azure Key Vault provides a centralized and highly secure location for storing secrets, keys, and certificates.

     * **Passwordless connections**: You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.
  ruleID: azure-password-01000
  when:
    or:
    - builtin.filecontent:
        filePattern: application.*\.(properties|yaml|yml)
        pattern: (password|pwd)
    - builtin.xml:
        namespaces: {}
        xpath: //password
    - builtin.xml:
        namespaces: {}
        xpath: //*[@name='Password']
