- category: mandatory
  customVariables: []
  description: Windows file system path
  effort: 3
  labels:
  - konveyor.io/target=linux
  - konveyor.io/source
  - domain=cloud-native
  - category=os-compatibility
  - ms-windows
  links:
  - title: Working across Windows and Linux file systems
    url: https://learn.microsoft.com/windows/wsl/filesystems
  - title: Access Linux filesystems in Windows and WSL 2
    url: https://devblogs.microsoft.com/commandline/access-linux-filesystems-in-windows-and-wsl-2
  message: |-
    The application currently relies on a file system path that is Microsoft Windows platform dependent.
     To ensure compatibility and portability in the Azure environment, it is recommended to replace the file system path with a Linux-style path.

     * **Review file system** dependencies: Identify the areas within your application that rely on file system paths. This could include file uploads, file access, file system operations, or any other components that interact with the file system.

     * **Replace Windows-style paths**: Modify the application code to replace Windows-style file system paths with Linux-style paths. Linux-style paths use forward slashes as directory separators instead of backslashes.

     * Use **platform-independent file** handling: When performing file system operations, utilize platform-independent file handling methods and libraries. Java provides classes like `Path` and `File` from the `java.nio.file` package, which handle file operations in a platform-independent manner.

     * **Test and validate**: Thoroughly test the modified application in a Linux-based environment to ensure that the changes to the file system paths do not introduce any issues. Verify that the application can access and manipulate files correctly using the Linux-style paths.
  ruleID: os-specific-00001
  when:
    builtin.filecontent:
      filePattern: (/|\\)([a-zA-Z0-9._-]+)\.(java|properties|jsp|jspf|tag|xml|txt)$
      pattern: (\W|\s|^)([a-zA-Z]\:|\\\\(\w+\.?)+)([\\\/][^\n\t]+)+
- category: mandatory
  customVariables: []
  description: Dynamic-Link Library (DLL)
  effort: 5
  labels:
  - konveyor.io/target=linux
  - konveyor.io/source
  - domain=cloud-native
  - category=os-compatibility
  - ms-windows
  links: []
  message: |-
    The application currently relies on a Dynamic-Link Library (DLL) that is specific to Microsoft Windows.
     To ensure compatibility and portability in the Azure environment, you have two options:

     * **Replace with a Linux-style shared library**: Develop or find an equivalent Linux-style shared library and adapt the application code.

     * Utilize **Azure service that supports Dynamic-Link Libraries**: Research Azure offerings that support Windows operating systems (such as Azure Virtual Machines) and refactor your application to utilize the DLL running on this service.
  ruleID: os-specific-00002
  when:
    builtin.file:
      pattern: ^([a-zA-Z0-9._-]+)\.dll$
